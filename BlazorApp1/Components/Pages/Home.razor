@page "/"
@rendermode InteractiveServer
@inject IConfiguration config 

<PageTitle>Home</PageTitle>

<h1>Subir archivos (merecemos un 10)</h1>
<!--sirve para seleccionar multiples archivos de tu pc-->
<InputFile OnChange="@LoadFiles" class="form-control" multiple /> 


<!--codigo para solo permitir ciertas extensiones:<InputFile OnChange="@LoadFiles" multiple accept=".png, .jpg, .jpeg" /> -->


<!--Mostrar los errores al subir archivo-->
@if(errors.Count > 0) 
{
   <p>Errors</p>
   <ul class="text-danger">
        @foreach (var error in errors)
        {
            <li>@error</li>
        }
    </ul>
}

@code {

    private long maxFileSize = 1024 * 1024 * 7; //representa 7MB
    private int maxAllowedFiles = 5; //maximo cantidad de archivos que se pueden subir
    private List<string> errors = new(); //enlistar los errores

    private async Task LoadFiles(InputFileChangeEventArgs e) //funcion para cargar los archivos
    {
        errors.Clear();

        if(e.FileCount > maxAllowedFiles)
        {
            errors.Add($"Error: Intentando subir {e.FileCount} archivos, pero solo {maxAllowedFiles} archivos han sido permitidos");
            return;
        }

        foreach (var file in e.GetMultipleFiles(maxAllowedFiles))
        {
            try
            {
                string newFileName = Path.ChangeExtension(Path.GetRandomFileName(), Path.GetExtension(file.Name));

                string path = Path.Combine(config.GetValue<string>("FileStorage")!, "victor", newFileName);//tcorey sería el nombre del usuario

                Directory.CreateDirectory(Path.Combine(config.GetValue<string>("FileStorage")!, "victor"));


                await using FileStream fs = new(path, FileMode.Create);
                await file.OpenReadStream(maxFileSize).CopyToAsync(fs);

            }
            catch (Exception ex)
            {
                errors.Add($"File : {file.Name} Error: {ex.Message} ");
                throw;
            }
        }

    }
}



